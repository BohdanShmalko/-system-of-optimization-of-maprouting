(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{408:function(e,t,s){"use strict";s.r(t);var r=s(56),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"webhooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhooks"}},[e._v("#")]),e._v(" Webhooks")]),e._v(" "),s("h3",{attrs:{id:"intro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intro"}},[e._v("#")]),e._v(" Intro")]),e._v(" "),s("p",[e._v("Webhooks are a technology that allows you to catch client changes on the client's side instantly. The client can create a server that will accept web hooks (requests) from the system. The client will be the server, and the system will be the client with this technology.")]),e._v(" "),s("h3",{attrs:{id:"webhooks-kinds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhooks-kinds"}},[e._v("#")]),e._v(" Webhooks kinds")]),e._v(" "),s("ul",[s("li",[e._v("Client Updated")]),e._v(" "),s("li",[e._v("User Created")]),e._v(" "),s("li",[e._v("User Updated")]),e._v(" "),s("li",[e._v("User Deleted")]),e._v(" "),s("li",[e._v("Webhook Created")]),e._v(" "),s("li",[e._v("Webhook Updated")]),e._v(" "),s("li",[e._v("Webhook Deleted")]),e._v(" "),s("li",[e._v("UserHistory Created")]),e._v(" "),s("li",[e._v("UserHistory Deleted")]),e._v(" "),s("li",[e._v("Error Created")]),e._v(" "),s("li",[e._v("Error Deleted")]),e._v(" "),s("li",[e._v("UserRooms Created")]),e._v(" "),s("li",[e._v("UserRooms Deleted")])]),e._v(" "),s("h3",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),s("h4",{attrs:{id:"fix-webhook-in-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fix-webhook-in-system"}},[e._v("#")]),e._v(" Fix webhook in system")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('const { data } = await this.http.post(\'/webhooks\', {\n  "url": "http://localhost:3001/getWebhook",\n  "event": "User Created",\n  "name": "user_created"\n}, { api_key: yourApiKey }).toPromise();\n')])])]),s("h4",{attrs:{id:"get-information-from-system-test-nodejs-http-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-information-from-system-test-nodejs-http-server"}},[e._v("#")]),e._v(" Get information from system (test nodejs http server)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const http = require('http');\nconst { parse } = require('querystring');\n\nconst hostname = 'localhost';\nconst port = 3001;\n\nconst server = http.createServer((req, res) => {\n  if(req.method.toUpperCase() === 'POST' && req.url === '/getWebhook'){\n      let body = '';\n      req.on('data', function (data) {\n        body += data;\n      });\n      req.on('end', function () {\n        try {\n          req.body = JSON.parse(body);\n          console.log(req.body);\n          res.statusCode = 200;\n          res.setHeader('Content-Type', 'text/plain');\n          res.end('ok');\n        } catch (e) {\n          req.body = parse(body);\n        }\n      });\n  }else {\n    res.statusCode = 404;\n    res.setHeader('Content-Type', 'text/plain');\n    res.end('Not found');\n  }\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);