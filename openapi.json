{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "get": {
        "operationId": "UserController_getUsers",
        "summary": "Get users",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User API"
        ]
      },
      "post": {
        "operationId": "UserController_createNewUser",
        "summary": "Create new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        },
        "tags": [
          "User API"
        ]
      }
    },
    "/users/{userId}": {
      "put": {
        "operationId": "UserController_updateUser",
        "summary": "Update user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "user id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        },
        "tags": [
          "User API"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "summary": "Delete user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "user id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/String"
                }
              }
            }
          }
        },
        "tags": [
          "User API"
        ]
      }
    },
    "/location": {
      "post": {
        "operationId": "LocationController_fixUserLocation",
        "summary": "Save user current location",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserHistoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHistorys"
                }
              }
            }
          }
        },
        "tags": [
          "User location API"
        ]
      },
      "get": {
        "operationId": "LocationController_getUserLocation",
        "summary": "Get users locations",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserHistorys"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User location API"
        ]
      }
    },
    "/location/route": {
      "get": {
        "operationId": "LocationController_getRoute",
        "summary": "Get rout between locations",
        "parameters": [
          {
            "name": "startLat",
            "required": true,
            "in": "query",
            "example": "38.8951",
            "description": "start lat coordinate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startLon",
            "required": true,
            "in": "query",
            "example": "-77.0364",
            "description": "start lon coordinate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endLat",
            "required": true,
            "in": "query",
            "example": "31.8951",
            "description": "end lat coordinate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endLon",
            "required": true,
            "in": "query",
            "example": "-71.0364",
            "description": "end  coordinate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "user id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transport",
            "required": true,
            "in": "query",
            "example": "car",
            "description": "location for transport",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationStepsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User location API"
        ]
      }
    },
    "/errors": {
      "get": {
        "operationId": "ErrorController_getErrors",
        "summary": "Get errors",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Device errors API"
        ]
      }
    },
    "/errors/{errorId}": {
      "delete": {
        "operationId": "ErrorController_deleteError",
        "summary": "Delete client",
        "parameters": [
          {
            "name": "errorId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "error id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/String"
                }
              }
            }
          }
        },
        "tags": [
          "Device errors API"
        ]
      }
    },
    "/superadmins/client": {
      "get": {
        "operationId": "SuperAdminsController_getClients",
        "summary": "Get clients",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clients"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Super admins API"
        ]
      },
      "post": {
        "operationId": "SuperAdminsController_createNewClient",
        "summary": "Create new client",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clients"
                }
              }
            }
          }
        },
        "tags": [
          "Super admins API"
        ]
      }
    },
    "/superadmins/client/{clientId}": {
      "put": {
        "operationId": "SuperAdminsController_updateClient",
        "summary": "Update client",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "error id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clients"
                }
              }
            }
          }
        },
        "tags": [
          "Super admins API"
        ]
      },
      "delete": {
        "operationId": "SuperAdminsController_deleteClient",
        "summary": "Delete client",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "error id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/String"
                }
              }
            }
          }
        },
        "tags": [
          "Super admins API"
        ]
      }
    },
    "/webhooks": {
      "get": {
        "operationId": "WebhookController_getWebhooks",
        "summary": "Get Webhooks",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebHooks"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Webhook API"
        ]
      },
      "post": {
        "operationId": "WebhookController_createNewWebhook",
        "summary": "Create new Webhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHooks"
                }
              }
            }
          }
        },
        "tags": [
          "Webhook API"
        ]
      }
    },
    "/webhooks/{webhookId}": {
      "put": {
        "operationId": "WebhookController_updateWebhook",
        "summary": "Update Webhook",
        "parameters": [
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "webhook history id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHooks"
                }
              }
            }
          }
        },
        "tags": [
          "Webhook API"
        ]
      },
      "delete": {
        "operationId": "WebhookController_deleteWebhook",
        "summary": "Delete Webhook",
        "parameters": [
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "webhook history id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/String"
                }
              }
            }
          }
        },
        "tags": [
          "Webhook API"
        ]
      }
    },
    "/webhookshistory": {
      "get": {
        "operationId": "WebhookHistoryController_getWebhooksHistory",
        "summary": "Get Webhooks history",
        "parameters": [
          {
            "name": "field",
            "required": false,
            "in": "query",
            "example": "_id",
            "description": "field that you want to find",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "required": false,
            "in": "query",
            "example": "[\"6200e7b2b3cfeca3405f57f0\", \"61fd2eecf3f78493727204f0\"]",
            "description": "JSON array with values that you want to find",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time from (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "example": 1649186190881,
            "description": "UTC time to (created_at)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "limit number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "example": 5,
            "description": "skip number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebHooksHistory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Webhook history API"
        ]
      },
      "post": {
        "operationId": "WebhookHistoryController_resendWebhook",
        "summary": "Resend Webhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendWebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHooksHistory"
                }
              }
            }
          }
        },
        "tags": [
          "Webhook history API"
        ]
      }
    }
  },
  "info": {
    "title": "System for optimization of maprouting",
    "description": "Documentation REST API",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {}
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string",
            "example": "Bipartite Subset",
            "description": "search algorithm for this user",
            "default": "Bipartite Subset"
          },
          "optionalParams": {
            "type": "object",
            "example": {
              "email": "my user email",
              "phone": "+111111111"
            },
            "description": "all user optional information",
            "default": "Bipartite Subset"
          },
          "externalId": {
            "type": "string",
            "example": "2536045",
            "description": "optional external user id",
            "default": "Bipartite Subset"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string",
            "example": "Bipartite Subset",
            "description": "search algorithm for this user",
            "default": "Bipartite Subset"
          },
          "optionalParams": {
            "type": "object",
            "example": {
              "email": "my user email",
              "phone": "+111111111"
            },
            "description": "all user optional information",
            "default": "Bipartite Subset"
          },
          "externalId": {
            "type": "string",
            "example": "2536045",
            "description": "optional external user id",
            "default": "Bipartite Subset"
          }
        }
      },
      "String": {
        "type": "object",
        "properties": {}
      },
      "CreateUserHistoryDto": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "string",
            "example": "38.8951",
            "description": "lat coordinate"
          },
          "lon": {
            "type": "string",
            "example": "-77.0364",
            "description": "lon coordinate"
          },
          "userId": {
            "type": "string",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "user id"
          },
          "time": {
            "type": "number",
            "example": 1649186190881,
            "description": "UTC time"
          }
        },
        "required": [
          "lat",
          "lon",
          "userId",
          "time"
        ]
      },
      "UserHistorys": {
        "type": "object",
        "properties": {}
      },
      "LocationStepsDto": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "location id"
          },
          "lat": {
            "type": "string",
            "example": "31.8951",
            "description": "lat coordinate"
          },
          "lon": {
            "type": "string",
            "example": "-71.0364",
            "description": "lon coordinate"
          },
          "step": {
            "type": "number",
            "example": 0,
            "description": "step number"
          }
        },
        "required": [
          "locationId",
          "lat",
          "lon",
          "step"
        ]
      },
      "Errors": {
        "type": "object",
        "properties": {}
      },
      "Clients": {
        "type": "object",
        "properties": {}
      },
      "CreateClientDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My cool client",
            "description": "client name"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateClientDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My cool client",
            "description": "new client name"
          },
          "apiKey": {
            "type": "string",
            "example": "783fe2cf-329e-40bf-812b-1830ba3c80bb",
            "description": "client apikey"
          },
          "newApiKey": {
            "type": "string",
            "example": "7835682cf-329e-40bf-812b-1830ba3c80bb",
            "description": "new client apikey"
          }
        },
        "required": [
          "apiKey"
        ]
      },
      "WebHooks": {
        "type": "object",
        "properties": {}
      },
      "CreateWebhookDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://your.domain/webhooks",
            "description": "POST url to server that listen webhooks"
          },
          "event": {
            "type": "string",
            "example": "Error Created",
            "description": "webhook name"
          },
          "name": {
            "type": "string",
            "example": "error_created",
            "description": "your webhook name"
          }
        },
        "required": [
          "url",
          "event",
          "name"
        ]
      },
      "UpdateWebhookDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://your.domain/webhooks",
            "description": "POST url to server that listen webhooks"
          },
          "event": {
            "type": "string",
            "example": "Error Created",
            "description": "webhook name"
          },
          "name": {
            "type": "string",
            "example": "error_created",
            "description": "your webhook name"
          }
        }
      },
      "WebHooksHistory": {
        "type": "object",
        "properties": {}
      },
      "ResendWebhookDto": {
        "type": "object",
        "properties": {
          "webhookHistoryId": {
            "type": "string",
            "example": "6200e7b2b3cfeca3405f57f0",
            "description": "webhook history id"
          }
        },
        "required": [
          "webhookHistoryId"
        ]
      }
    }
  }
}